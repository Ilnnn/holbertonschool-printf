.TH _PRINTF 3 "July 2025" "Custom Library" "User Manual"
.SH NAME
_printf \- Custom implementation of the printf function
.SH SYNOPSIS
.B #include "main.h"
.br
int _printf(const char *format, ...);
.SH DESCRIPTION
.B _printf
is a custom implementation of the standard C
.B printf
function. It produces output according to a format string and supports several format specifiers.

It takes a format string and a variable number of arguments, processes the format string, and prints the result to the standard output (stdout).

Supported format specifiers include:
.TP
.B %c
Prints a single character.
.TP
.B %s
Prints a null-terminated string.
.TP
.B %%
Prints the percent symbol (%).
.TP
.B %d, %i
Prints a signed decimal integer.
.TP
.B %u
Prints an unsigned decimal integer.
.TP
.B %o
Prints an unsigned octal number.
.TP
.B %x, %X
Prints an unsigned hexadecimal number (lowercase or uppercase).
.TP
.B %p
Prints a memory address (not yet implemented in the source code).
.TP
.B [unsupported]
Unknown specifiers are printed as-is, prefixed with a percent symbol.

.SH RETURN VALUE
The function returns the total number of characters printed (excluding the null byte used to end output to strings).

.SH EXAMPLE
.nf
#include "main.h"

int main(void)
{
    _printf("Hello %s!\\n", "world");
    _printf("Number: %d\\n", 42);
    return (0);
}
.fi

.SH AUTHORS
.B Ilan
and
.B Abdel

.SH NOTES
This function mimics the standard
.B printf
but does not handle all format specifiers. Unsupported ones will be printed literally with the percent sign. Memory address (%p) and some unsigned formats (like %u, %o, %x, %X) are referenced in the test file but not implemented in the current code.

.SH SEE ALSO
printf(3), putchar(3), va_start(3), va_arg(3), va_end(3)

